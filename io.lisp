(in-package :net.sinawali.wumpus)

(defun display-file (file)
  "Simply display the contents of the file to *query-io*. Avoids
  mulitple lines of lisp code formats or prints"
  (let ((line-count 0))
    (with-open-file (fstream file)
      (do ((line (read-line fstream nil) (read-line fstream nil)))
        ((null line))
        (incf line-count)
        (format *query-io* "~A~%" line)
        (when (> line-count 23)
          (setf line-count 0)
          (user-input "Press enter to continue..."))))))

(defun user-input (message)
  (format *query-io* "~A " message)
  (force-output *query-io*)
  (read-line *query-io*))

(defun input-value (prompt &key (validator #'stringp)
                                (transformer nil)
                                (error-prompt "Invalid value, try again."))
  (let ((*read-eval* nil)
        (value nil))
    (do () ((funcall validator value))
      (when (not (null value)) (format *query-io* "~A~%" error-prompt ))
      (setf value (read-from-string (user-input prompt) nil "")))
    (if (not (null transformer))
      (funcall transformer value)
      value)))

(defun input-string (prompt &key (validator #'stringp)
                                (transformer nil)
                                (error-prompt "Invalid value, try again."))
  (let ((value nil))
    (do () ((funcall validator value))
      (when (not (null value)) (format *query-io* "~A~%" error-prompt ))
      (setf value (user-input prompt)))
    (if (not (null transformer))
      (funcall transformer value)
      value)))
